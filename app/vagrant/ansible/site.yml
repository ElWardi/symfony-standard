---
- hosts: all
  sudo: yes
  vars:
      path: /home/vagrant/www
      port: 80
  roles:
      - build/debian

  tasks:

  # Apt update
  - name: apt update
    apt: update_cache=yes

  # Dependencies
  - name: python-pycurl package
    apt: >
      pkg=python-pycurl
      state=present

  # Vim
  - name: vim package
    apt: >
      pkg=vim
      state=present

  # Git
  - name: git package
    apt: >
      pkg=git
      state=present

  # Ssh Config
  - name: ssh config
    template: >
      src=templates/ssh/config.j2
      dest=/home/vagrant/.ssh/config

  # Oh my zsh
  - name: zsh package
    apt: >
      pkg=zsh
      state=present
  - name: oh-my-zsh clone
    git: >
      repo=https://github.com/robbyrussell/oh-my-zsh.git
      dest=~/.oh-my-zsh
      update=no
    sudo: no
  - name: oh-my-zsh template
    shell: >
      cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
      creates=~/.zshrc
    sudo: no
  - name: oh-my-zsh plugins
    lineinfile: >
      dest=/home/vagrant/.zshrc
      line="plugins=(git composer symfony2 history history-substring-search)"
      regexp="plugins=\(.*\)"
  - name: oh-my-zsh prompt
    lineinfile: >
      dest=/home/vagrant/.zshrc
      line="PROMPT='%{$fg[cyan]%}%n%{$fg[red]%}@%{$fg[cyan]%}%m %{$fg_bold[red]%}➜ %{$fg_bold[green]%}%p %{$fg[cyan]%}%c %{$fg_bold[blue]%}$(git_prompt_info)%{$fg_bold[blue]%} % %{$reset_color%}'"
      regexp="^PROMPT="
  - name: oh-my-zsh shell
    user: >
      name=vagrant
      shell=/bin/zsh

  # Dotdeb
  - name: dotdeb key
    apt_key: >
      url=http://www.dotdeb.org/dotdeb.gpg
      state=present
  - name: dotdeb repositories
    apt_repository: >
      repo="{{ item }}"
      state=present
      update_cache=yes
    with_items:
      - deb http://packages.dotdeb.org wheezy all
      - deb-src http://packages.dotdeb.org wheezy all
      - deb http://packages.dotdeb.org wheezy-php55 all
      - deb-src http://packages.dotdeb.org wheezy-php55 all

  # Apache
  - name: apache package
    apt: >
      pkg=apache2-mpm-prefork
      state=present
  - name: apache disable default
    shell: >
      a2dissite default
      removes=/etc/apache2/sites-enabled/000-default
    notify: apache restart
  - name: apache service
    service: >
      name=apache2
      state=started
      enabled=yes

  # Mysql Server
  - name: mysql server package
    apt: >
      pkg=mysql-server
      state=present
  - name: mysql service
    service: >
      name=mysql
      state=started
      enabled=yes

  # Php 5
  - name: php5 packages
    apt: >
      pkg={{ item }}
      state=present
    with_items:
      - libapache2-mod-php5
      - php5-cli
    notify: apache restart
  - name: php5 extra packages
    apt: >
      pkg={{ item }}
      state=present
    with_items:
      - php5-intl
      - php5-mysqlnd
    notify: apache restart
  - name: php5 apache module
    shell: >
      a2enmod php5
      creates=/etc/apache2/mods-enabled/php5.conf
    notify: apache restart
  - name: php5 config memory apache
    template: >
      src=templates/php/memory.ini.j2
      dest=/etc/php5/apache2/conf.d/100_memory.ini
    notify: apache restart
  - name: php5 config memory cli
    template: >
      src=templates/php/memory.ini.j2
      dest=/etc/php5/cli/conf.d/100_memory.ini
  - name: php5 config date apache
    template: >
      src=templates/php/date.ini.j2
      dest=/etc/php5/apache2/conf.d/100_date.ini
    notify: apache restart
  - name: php5 config date cli
    template: >
      src=templates/php/date.ini.j2
      dest=/etc/php5/cli/conf.d/100_date.ini

  # Apache Virtual Host
  - name: apache virtual host conf
    template: >
      src=templates/apache/vhost.conf.j2
      dest=/etc/apache2/sites-available/vhost_default
  - name: apache enable virtual host conf
    shell: >
      a2ensite vhost_default
      creates=/etc/apache2/sites-enabled/vhost_default
    notify: apache restart

  # Php 5 Dev
  - name: php5 extra packages dev
    apt: >
      pkg={{ item }}
      state=present
    with_items:
      - php5-xdebug
      - php5-xsl
      - php5-curl
    notify: apache restart
  - name: php5 config xdebug apache
    template: >
      src=templates/php/xdebug.ini.j2
      dest=/etc/php5/apache2/conf.d/100_xdebug.ini
    notify: apache restart
  - name: php5 config xdebug cli
    template: >
      src=templates/php/xdebug.ini.j2
      dest=/etc/php5/cli/conf.d/100_xdebug.ini

  # Composer
  - name: composer install
    shell: >
      curl -sS https://getcomposer.org/installer | /usr/bin/php && /bin/mv -f /home/vagrant/composer.phar /usr/local/bin/composer
      creates=/usr/local/bin/composer

  # Npm
  - name: bearstech key
    apt_key: >
      url=http://deb.bearstech.com/bearstech-archive.gpg
      state=present
  - name: bearstech repositories
    apt_repository: >
      repo="{{ item }}"
      state=present
      update_cache=yes
    with_items:
      - deb http://deb.bearstech.com/debian wheezy-bearstech main
  - name: nodejs package
    apt: >
      pkg=nodejs
      state=present

  # Project
  - name: project vagrant
    lineinfile: >
      dest=/home/vagrant/.zshrc
      line="export SYMFONY__VAGRANT=1"
      regexp="^export SYMFONY__VAGRANT="
  - name: project path bin
    lineinfile: >
      dest=/home/vagrant/.zshrc
      line="PATH=$PATH:./bin"
      regexp="^PATH="
  - name: project root
    file: >
      path={{ path }}/..
      state=directory
      group=www-data
      mode=0710
  - name: project cache
    file: >
      path={{ path }}/../cache
      state=directory
    sudo: no
  - name: project logs
    file: >
      path={{ path }}/../logs
      state=directory
    sudo: no

  # Acl (Should be simplified with ansible 1.4)
  - name: acl package
    apt: >
      pkg=acl
      state=present
  - name: acl dirs
    shell: >
      setfacl -R -m u:www-data:rwX -m u:vagrant:rwX {{ path }}/../cache {{ path }}/../logs && setfacl -dR -m u:www-data:rwx -m u:vagrant:rwx {{ path }}/../cache {{ path }}/../logs

  handlers:

    # Apache
    - name: apache restart
      service: >
        name=apache2
        state=restarted
