---
- hosts: all
  sudo: yes
  vars:
    path: /home/vagrant/www
    port: 80

  tasks:

  # Dependencies
  - name: epel repo
    copy: src=templates/epel.repo.j2 dest=/etc/yum.repos.d/epel.repo
  - name: epel key
    copy: src=files/RPM-GPG-KEY-EPEL-6 dest=/etc/pki/rpm-gpg

  # Git
  - name: git package
    yum: name=git state=present

  # Ssh Config
  - name: ssh config
    template: src=templates/ssh_config.j2 dest=/home/vagrant/.ssh/config

  # Zend Server
  - name: zendserver archive
    copy: src=files/ZendServer-6.1.0-RepositoryInstaller-linux.tar.gz dest=/opt/ZendServer-6.1.0-RepositoryInstaller-linux.tar.gz
  - name: zendserver unpack
    command: tar zxf /opt/ZendServer-6.1.0-RepositoryInstaller-linux.tar.gz chdir=/opt creates=/opt/ZendServer-RepositoryInstaller-linux/install_zs.sh
  - name: zendserver install
    shell: ./install_zs.sh 5.4 --automatic chdir=/opt/ZendServer-RepositoryInstaller-linux
      creates=/usr/local/zend/bin/php
    notify: zendserver bootstrap
  - name: zendserver iptables
    lineinfile: dest=/etc/sysconfig/iptables state=present regexp="10081" insertafter="^:OUTPUT " line="-A INPUT -m state --state NEW -m tcp -p tcp --dport 10081 -j ACCEPT"
    notify: iptables restart
  - name: zendserver path bin
    lineinfile: dest=/etc/profile line="PATH=$PATH:/usr/local/zend/bin" regexp="^PATH="
  - name: zendserver path lib
    lineinfile: dest=/etc/profile line="LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/zend/lib" regexp="^LD_LIBRARY_PATH="

  # Httpd
  - name: httpd package
    yum: name=httpd state=present
  - name: httpd service
    service: name=httpd state=started enabled=yes
  - name: httpd iptables
    lineinfile: dest=/etc/sysconfig/iptables state=present regexp="{{ port }}" insertafter="^:OUTPUT " line="-A INPUT -p tcp --dport {{ port }} -j ACCEPT"
    notify: iptables restart

  # Httpd Virtual Host
  - name: httpd virtual host 1
    lineinfile: dest=/etc/httpd/conf/httpd.conf regexp="<VirtualHost \*:80>" line="#<VirtualHost *:80>"
    notify: httpd restart
  - name: httpd virtual host 2
    lineinfile: dest=/etc/httpd/conf/httpd.conf regexp="Include \"/usr/local/zend/etc/sites.d/zend-default-vhost-80.conf\"" line="#Include \"/usr/local/zend/etc/sites.d/zend-default-vhost-80.conf\""
    notify: httpd restart
  - name: httpd virtual host 3
    lineinfile: dest=/etc/httpd/conf/httpd.conf regexp="</VirtualHost>" line="#</VirtualHost>"
    notify: httpd restart
  - name: httpd virtual host conf
    template: src=templates/vhost.conf.j2 dest=/usr/local/zend/etc/sites.d/vhost_default.conf
    notify: httpd restart

  # Mysql Server
  - name: mysql server package
    yum: name=mysql-server state=present
  - name: mysql server service install
    shell: /sbin/chkconfig mysqld on
      creates=/etc/rc0.d/K36mysqld
  - name: mysql server service
    service: name=mysqld state=started enabled=true

  # Php 5.4
  - name: php54 packages
    yum: name={{ item }} state=present
    with_items:
      - php-5.4-apc-zend-server
    notify: httpd restart
  - name: php config memory
    template: src=templates/php_memory.ini.j2 dest=/usr/local/zend/etc/conf.d/100_memory.ini
  - name: php config date
    template: src=templates/php_date.ini.j2 dest=/usr/local/zend/etc/conf.d/100_date.ini
  - name: php config short_open_tag
    template: src=templates/php_short_open_tag.ini.j2 dest=/usr/local/zend/etc/conf.d/100_short_open_tag.ini
  - name: php config apc
    template: src=templates/php_apc.ini.j2 dest=/usr/local/zend/etc/conf.d/100_apc.ini

  # Php 5.4 Dev
  - name: php54 packages dev
    yum: name={{ item }} state=present
    with_items:
      - php-5.4-xdebug-zend-server
  - name: php config xdebug
    template: src=templates/php_xdebug.ini.j2 dest=/usr/local/zend/etc/conf.d/100_xdebug.ini

  # Composer
  - name: composer install
    shell: curl -sS https://getcomposer.org/installer | /usr/local/zend/bin/php && /bin/mv -f /home/vagrant/composer.phar /usr/local/bin/composer
      creates=/usr/local/bin/composer

  # Npm
  - name: npm package
    yum: name=npm state=present
  - name: node path
    lineinfile: dest=/home/vagrant/.bashrc line="export NODE_PATH=/usr/lib/node_modules" regexp="^export NODE_PATH="

  # Project
  - name: project vagrant
    lineinfile: dest=/home/vagrant/.bashrc line="export SYMFONY__VAGRANT=1" regexp="^export SYMFONY__VAGRANT="
  - name: project path bin
    lineinfile: dest=/home/vagrant/.bashrc line="PATH=$PATH:./bin" regexp="^PATH="
  - name: project root
    file: path={{ path }}/.. state=directory group=apache mode=0710
  - name: project cache
    file: path={{ path }}/../cache state=directory
    sudo: no
  - name: project logs
    file: path={{ path }}/../logs state=directory
    sudo: no
  - name: bower package
    npm: name=bower version=1.2.* state=present global=yes

  # Acl (Should be simplified with ansible 1.4)
  - name: acl dirs
    shell: setfacl -R -m u:apache:rwX -m u:vagrant:rwX {{ path }}/../cache {{ path }}/../logs && setfacl -dR -m u:apache:rwx -m u:vagrant:rwx {{ path }}/../cache {{ path }}/../logs

  # Build
  - name: ant package
    yum: name=ant state=present
  - name: graphviz package
    yum: name=graphviz state=present
  - name: zombie package
    npm: name=zombie version=1.4.* state=present global=yes

  handlers:

    # IP Tables
    - name: iptables restart
      service: name=iptables state=restarted

    # Httpd
    - name: httpd restart
      service: name=httpd state=restarted

    # Zend Server
    - name: zendserver bootstrap
      shell: ./zs-manage bootstrap-single-server -p admin -a TRUE -r FALSE chdir=/usr/local/zend/bin
